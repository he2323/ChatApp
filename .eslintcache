[{"P:\\react+flask\\ChatApp\\src\\index.tsx":"1","P:\\react+flask\\ChatApp\\src\\App.tsx":"2","P:\\react+flask\\ChatApp\\src\\Styles.tsx":"3","P:\\react+flask\\ChatApp\\src\\Components\\Register.tsx":"4","P:\\react+flask\\ChatApp\\src\\Components\\Friends.tsx":"5","P:\\react+flask\\ChatApp\\src\\Components\\Chat.tsx":"6","P:\\react+flask\\ChatApp\\src\\Components\\Login.tsx":"7","P:\\react+flask\\ChatApp\\src\\Components\\InputField.tsx":"8","P:\\react+flask\\ChatApp\\src\\Components\\Friend.tsx":"9","P:\\react+flask\\ChatApp\\src\\Components\\ChoosenPerson.tsx":"10"},{"size":411,"mtime":1609080520589,"results":"11","hashOfConfig":"12"},{"size":4890,"mtime":1610326234092,"results":"13","hashOfConfig":"12"},{"size":3978,"mtime":1610226450896,"results":"14","hashOfConfig":"12"},{"size":2223,"mtime":1609184715466,"results":"15","hashOfConfig":"12"},{"size":1041,"mtime":1610228205994,"results":"16","hashOfConfig":"12"},{"size":2005,"mtime":1610228076471,"results":"17","hashOfConfig":"12"},{"size":1327,"mtime":1609184556250,"results":"18","hashOfConfig":"12"},{"size":658,"mtime":1609073311283,"results":"19","hashOfConfig":"12"},{"size":1045,"mtime":1610232177422,"results":"20","hashOfConfig":"12"},{"size":411,"mtime":1610230330098,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1tervze",{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"P:\\react+flask\\ChatApp\\src\\index.tsx",[],["44","45"],"P:\\react+flask\\ChatApp\\src\\App.tsx",["46","47","48","49"],"P:\\react+flask\\ChatApp\\src\\Styles.tsx",[],"P:\\react+flask\\ChatApp\\src\\Components\\Register.tsx",[],"P:\\react+flask\\ChatApp\\src\\Components\\Friends.tsx",[],"P:\\react+flask\\ChatApp\\src\\Components\\Chat.tsx",["50"],"import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { ChatMain, ActualChat, Message, MsgHandle } from \"../Styles\";\r\nimport ChoosenPerson from \"./ChoosenPerson\";\r\ninterface ChatI {\r\n  logOut: () => any;\r\n  selectedUser: number;\r\n  loggedUserId: number;\r\n}\r\ninterface MessageI {\r\n  message_id: number;\r\n  message_sender_id: number;\r\n  message_group_id: number;\r\n  message_text: string;\r\n  message_type: string;\r\n  message_img_link?: string;\r\n  message_send_date: Date;\r\n}\r\nconst Chat = ({ logOut, selectedUser, loggedUserId }: ChatI) => {\r\n  const [sUserInfo, setSUserInfo] = useState({});\r\n  const [messages, setMessages] = useState([]);\r\n  useEffect(() => {\r\n    fetch(`/user_info/${selectedUser}`)\r\n      .then((res) => res.json())\r\n      .then((data) => setSUserInfo(data));\r\n    console.log(`select user time: ${Date.now()}`);\r\n  }, [selectedUser]);\r\n\r\n  return (\r\n    <ChatMain>\r\n      <ChoosenPerson\r\n        logOut={logOut}\r\n        user_image={sUserInfo.user_image_link}\r\n        user_name={sUserInfo.name}\r\n      />\r\n\r\n      <ActualChat>\r\n        {messages.map((message: MessageI) => {\r\n          return (\r\n            <Message\r\n              loggedUser={message.message_sender_id === loggedUserId ? 1 : 0}\r\n            >\r\n              {message.message_text}\r\n            </Message>\r\n          );\r\n        })}\r\n        <Message loggedUser={0}>somerandom text shit</Message>\r\n        <Message loggedUser={1}>somerandom text shit</Message>\r\n        <Message loggedUser={0}>somerandom text shit</Message>\r\n        <Message loggedUser={1}>somerandom text shit</Message>\r\n        <Message loggedUser={1}>somerandom text shit</Message>\r\n        <Message loggedUser={0}>somerandom text shit</Message>\r\n        <Message loggedUser={1}>somerandom text shit</Message>\r\n        <button onClick={() => console.log(selectedUser)}>\r\n          selected user log\r\n        </button>\r\n      </ActualChat>\r\n      <MsgHandle></MsgHandle>\r\n    </ChatMain>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","P:\\react+flask\\ChatApp\\src\\Components\\Login.tsx",[],"P:\\react+flask\\ChatApp\\src\\Components\\InputField.tsx",[],"P:\\react+flask\\ChatApp\\src\\Components\\Friend.tsx",[],"P:\\react+flask\\ChatApp\\src\\Components\\ChoosenPerson.tsx",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":15,"column":10,"nodeType":"57","messageId":"58","endLine":15,"endColumn":21},{"ruleId":"55","severity":1,"message":"59","line":15,"column":23,"nodeType":"57","messageId":"58","endLine":15,"endColumn":37},{"ruleId":"55","severity":1,"message":"60","line":21,"column":27,"nodeType":"57","messageId":"58","endLine":21,"endColumn":45},{"ruleId":"61","severity":1,"message":"62","line":112,"column":6,"nodeType":"63","endLine":112,"endColumn":18,"suggestions":"64"},{"ruleId":"55","severity":1,"message":"65","line":21,"column":20,"nodeType":"57","messageId":"58","endLine":21,"endColumn":31},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"@typescript-eslint/no-unused-vars","'userFriends' is assigned a value but never used.","Identifier","unusedVar","'setUserFriends' is assigned a value but never used.","'setPrivilege_level' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setupBeforeUnloadListener'. Either include it or remove the dependency array.","ArrayExpression",["68"],"'setMessages' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [setupBeforeUnloadListener, userLogged]",{"range":"71","text":"72"},[3649,3661],"[setupBeforeUnloadListener, userLogged]"]