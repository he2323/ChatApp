[{"P:\\react+flask\\ChatApp\\src\\index.tsx":"1","P:\\react+flask\\ChatApp\\src\\App.tsx":"2","P:\\react+flask\\ChatApp\\src\\Containers\\Friends.tsx":"3","P:\\react+flask\\ChatApp\\src\\Containers\\Chat.tsx":"4","P:\\react+flask\\ChatApp\\src\\Styles.tsx":"5","P:\\react+flask\\ChatApp\\src\\Containers\\Login.tsx":"6","P:\\react+flask\\ChatApp\\src\\Containers\\Register.tsx":"7","P:\\react+flask\\ChatApp\\src\\Containers\\InputField.tsx":"8"},{"size":411,"mtime":1609080520589,"results":"9","hashOfConfig":"10"},{"size":3357,"mtime":1609184181690,"results":"11","hashOfConfig":"10"},{"size":737,"mtime":1609080762008,"results":"12","hashOfConfig":"10"},{"size":852,"mtime":1609081295882,"results":"13","hashOfConfig":"10"},{"size":3793,"mtime":1609183204157,"results":"14","hashOfConfig":"10"},{"size":1327,"mtime":1609183594989,"results":"15","hashOfConfig":"10"},{"size":847,"mtime":1609184158777,"results":"16","hashOfConfig":"10"},{"size":658,"mtime":1609073311283,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1tervze",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"P:\\react+flask\\ChatApp\\src\\index.tsx",[],["38","39"],"P:\\react+flask\\ChatApp\\src\\App.tsx",["40"],"// eslint-disable-next-line\nimport { useState, useEffect } from \"react\";\nimport Chat from \"./Containers/Chat\";\nimport Login from \"./Containers/Login\";\nimport Register from \"./Containers/Register\";\nimport Friends from \"./Containers/Friends\";\nimport { MainBody, MainApp } from \"./Styles\";\n\nconst App = () => {\n  //data to store\n  const [userLogged, setUserLogged] = useState(false);\n  const [userHaveAccount, setUserHaveAccount] = useState(true);\n  const [mail, setMail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  const [image_link, setImage_link] = useState(\"\");\n  const [privilege_level, setPrivilege_level] = useState(1); // (0- guest, 1- user, 3-admin) base 1, couse its for normal registration, still no guest login, and admin is speciall hcanging only in database\n  //basic navigation\n  const toLogin = (): void => setUserHaveAccount(true);\n  const toRegister = (): void => setUserHaveAccount(false);\n  //user info\n  const changeMail = (value: string): void => setMail(value);\n  const changePassword = (value: string): void => setPassword(value);\n  const changeName = (value: string): void => setName(value);\n  const changeNickname = (value: string): void => setNickname(value);\n  const changeImage_link = (value: string): void => setImage_link(value);\n\n  const logOut = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) =>\n    setUserLogged(false);\n\n  const registerUser = () => {\n    fetch(\n      `/register/${mail}/${password}/${name}/${nickname}/${image_link}>/${privilege_level}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.res === true) {\n          console.log(\"udało się utworzyć użytkownia\");\n          toLogin();\n        } else {\n          console.log(\"nie udało się utworzyć użytkownia\");\n        }\n      });\n  };\n\n  const logIn = () => {\n    if (mail.length > 0 && password.length > 0) {\n      fetch(`/login/${mail}/${password}`)\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.err === true) {\n            alert(\"bad pass or mail\");\n          } else {\n            console.log(data);\n          }\n        });\n    } else alert(\"to short\");\n  };\n\n  return (\n    <MainBody>\n      {userLogged ? (\n        <MainApp>\n          <Friends></Friends>\n          <Chat logOut={logOut}></Chat>\n        </MainApp>\n      ) : userHaveAccount ? (\n        <Login\n          mail={mail}\n          password={password}\n          changeMail={(value: string) => changeMail(value)}\n          changePassword={(value: string) => changePassword(value)}\n          toRegister={toRegister}\n          logIn={logIn}\n        ></Login>\n      ) : (\n        <Register\n          mail={mail}\n          password={password}\n          name={name}\n          nickname={nickname}\n          image_link={image_link}\n          register = {() => registerUser()}\n          toLogin={toLogin}\n          changeMail={(value: string) => changeMail(value)}\n          changePassword={(value: string) => changePassword(value)}\n          changeName={(value: string) => changeName(value)}\n          changeNickname={(value: string) => changeNickname(value)}\n          changeImage_link={(value: string) => changeImage_link(value)}\n        ></Register>\n      )}\n    </MainBody>\n  );\n};\n\nexport default App;\n","P:\\react+flask\\ChatApp\\src\\Containers\\Friends.tsx",[],"P:\\react+flask\\ChatApp\\src\\Containers\\Chat.tsx",[],"P:\\react+flask\\ChatApp\\src\\Styles.tsx",[],"P:\\react+flask\\ChatApp\\src\\Containers\\Login.tsx",[],"P:\\react+flask\\ChatApp\\src\\Containers\\Register.tsx",["41","42","43","44","45"],"import { MainLogin, LoginImg, Forms, LoginLabel, LoginButton } from \"../Styles\";\r\n\r\ninterface RegisterI {\r\n  mail: string;\r\n  password: string;\r\n  name: string;\r\n  nickname: string;\r\n  image_link: string;\r\n  toLogin: () => void;\r\n  changeMail: (value: string) => void;\r\n  changePassword: (value: string) => void;\r\n  changeName: (value: string) => void;\r\n  changeNickname: (value: string) => void;\r\n  changeImage_link: (value: string) => void;\r\n  register: () => void;\r\n}\r\n\r\nconst Register = ({\r\n  mail,\r\n  password,\r\n  name,\r\n  nickname,\r\n  image_link,\r\n  toLogin,\r\n  changeMail,\r\n  changePassword,\r\n  changeName,\r\n  changeNickname,\r\n  changeImage_link,\r\n  register\r\n}: RegisterI): JSX.Element => {\r\n  return (\r\n    <div>\r\n      register\r\n      <button onClick={() => toLogin()}>toLogin</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","P:\\react+flask\\ChatApp\\src\\Containers\\InputField.tsx",[],["46","47"],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":18,"column":27,"nodeType":"54","messageId":"55","endLine":18,"endColumn":45},{"ruleId":"52","severity":1,"message":"56","line":1,"column":10,"nodeType":"54","messageId":"55","endLine":1,"endColumn":19},{"ruleId":"52","severity":1,"message":"57","line":1,"column":21,"nodeType":"54","messageId":"55","endLine":1,"endColumn":29},{"ruleId":"52","severity":1,"message":"58","line":1,"column":31,"nodeType":"54","messageId":"55","endLine":1,"endColumn":36},{"ruleId":"52","severity":1,"message":"59","line":1,"column":38,"nodeType":"54","messageId":"55","endLine":1,"endColumn":48},{"ruleId":"52","severity":1,"message":"60","line":1,"column":50,"nodeType":"54","messageId":"55","endLine":1,"endColumn":61},{"ruleId":"48","replacedBy":"61"},{"ruleId":"50","replacedBy":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"@typescript-eslint/no-unused-vars","'setPrivilege_level' is assigned a value but never used.","Identifier","unusedVar","'MainLogin' is defined but never used.","'LoginImg' is defined but never used.","'Forms' is defined but never used.","'LoginLabel' is defined but never used.","'LoginButton' is defined but never used.",["63"],["64"],"no-global-assign","no-unsafe-negation"]