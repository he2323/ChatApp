[{"P:\\react+flask\\ChatApp\\src\\index.tsx":"1","P:\\react+flask\\ChatApp\\src\\Styles.tsx":"2","P:\\react+flask\\ChatApp\\src\\Components\\Chat.tsx":"3","P:\\react+flask\\ChatApp\\src\\Components\\Logged.tsx":"4","P:\\react+flask\\ChatApp\\src\\Containers\\StartGreet.tsx":"5","P:\\react+flask\\ChatApp\\src\\Containers\\Register.tsx":"6","P:\\react+flask\\ChatApp\\src\\Containers\\Login.tsx":"7","P:\\react+flask\\ChatApp\\src\\Components\\App.tsx":"8","P:\\react+flask\\ChatApp\\src\\Containers\\InputField.tsx":"9","P:\\react+flask\\ChatApp\\src\\Containers\\ChoosenPerson.tsx":"10","P:\\react+flask\\ChatApp\\src\\Containers\\ChatList.tsx":"11","P:\\react+flask\\ChatApp\\src\\Containers\\ChoosenChat.tsx":"12","P:\\react+flask\\ChatApp\\src\\Containers\\FriendsList.tsx":"13","P:\\react+flask\\ChatApp\\src\\Containers\\Friend.tsx":"14","P:\\react+flask\\ChatApp\\src\\Components\\FriendMng.tsx":"15"},{"size":422,"mtime":1610839600701,"results":"16","hashOfConfig":"17"},{"size":4965,"mtime":1611008013285,"results":"18","hashOfConfig":"17"},{"size":2278,"mtime":1610919547765,"results":"19","hashOfConfig":"17"},{"size":4386,"mtime":1611008051120,"results":"20","hashOfConfig":"17"},{"size":280,"mtime":1610842564006,"results":"21","hashOfConfig":"17"},{"size":1146,"mtime":1611006403496,"results":"22","hashOfConfig":"17"},{"size":1327,"mtime":1610839600701,"results":"23","hashOfConfig":"17"},{"size":5894,"mtime":1611007160569,"results":"24","hashOfConfig":"17"},{"size":665,"mtime":1611007175584,"results":"25","hashOfConfig":"17"},{"size":442,"mtime":1610840649672,"results":"26","hashOfConfig":"17"},{"size":675,"mtime":1610840777615,"results":"27","hashOfConfig":"17"},{"size":403,"mtime":1610841572206,"results":"28","hashOfConfig":"17"},{"size":764,"mtime":1610840870783,"results":"29","hashOfConfig":"17"},{"size":849,"mtime":1610839600700,"results":"30","hashOfConfig":"17"},{"size":1110,"mtime":1611007853219,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1tervze",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"P:\\react+flask\\ChatApp\\src\\index.tsx",[],["64","65"],"P:\\react+flask\\ChatApp\\src\\Styles.tsx",[],"P:\\react+flask\\ChatApp\\src\\Components\\Chat.tsx",["66","67"],"import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { ChatMain, ActualChat, Message, MsgHandle } from \"../Styles\";\r\nimport ChoosenPerson from \"../Containers/ChoosenPerson\";\r\nimport { SelElementI } from \"./Logged\";\r\nimport ChoosenChat from \"../Containers/ChoosenChat\";\r\nimport StartGreet from \"../Containers/StartGreet\";\r\nimport FriendMng from \"./FriendMng\";\r\ninterface ChatI {\r\n  logOut: () => any;\r\n  selectedElement: SelElementI;\r\n  loggedUserId: number;\r\n}\r\nconst Chat = ({ logOut, selectedElement, loggedUserId }: ChatI) => {\r\n  const [sElementInfo, setsElementInfo] = useState({});\r\n  const [messages, setMessages] = useState([]);\r\n  useEffect(() => {\r\n    const fetchElementData = async () => {\r\n      const elementResponse = await fetch(\r\n        selectedElement.type === \"friend\" ? \"/user_info\" : \"/chat_info\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            content_type: \"application/json\",\r\n          },\r\n          body: JSON.stringify({ id: selectedElement.id }),\r\n        }\r\n      );\r\n      const elementData = await elementResponse.json();\r\n      await setsElementInfo(elementData);\r\n    };\r\n    if (selectedElement.type !== \"start\") {\r\n      fetchElementData();\r\n    }\r\n  }, [selectedElement]);\r\n\r\n  return (\r\n    <ChatMain>\r\n      {selectedElement.type === \"friend\" ? (\r\n        <ChoosenPerson\r\n          logOut={logOut}\r\n          image={sElementInfo.image_link}\r\n          name={sElementInfo.name}\r\n        />\r\n      ) : selectedElement.type === \"chat\" ? (\r\n        <ChoosenChat\r\n          logOut={logOut}\r\n          image={sElementInfo.image_link}\r\n          name={sElementInfo.name}\r\n        />\r\n      ) : (\r\n        <StartGreet />\r\n      )}\r\n\r\n      {selectedElement.type === \"chat\" ? (\r\n        <ActualChat>\r\n          <Message loggedUser={1}>somerandom text shit</Message>\r\n          <button onClick={() => console.log(selectedElement)}>\r\n            selected user log\r\n          </button>\r\n        </ActualChat>\r\n      ) : selectedElement.type === \"friend\" ? (\r\n        <FriendMng selectedElement={selectedElement}\r\n        loggedUser={loggedUserId}/>\r\n      ) : (\r\n        <StartGreet isPlaceholder={true} />\r\n      )}\r\n      <MsgHandle></MsgHandle>\r\n    </ChatMain>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","P:\\react+flask\\ChatApp\\src\\Components\\Logged.tsx",["68","69","70","71"],"P:\\react+flask\\ChatApp\\src\\Containers\\StartGreet.tsx",[],"P:\\react+flask\\ChatApp\\src\\Containers\\Register.tsx",[],"P:\\react+flask\\ChatApp\\src\\Containers\\Login.tsx",[],"P:\\react+flask\\ChatApp\\src\\Components\\App.tsx",[],"P:\\react+flask\\ChatApp\\src\\Containers\\InputField.tsx",[],"P:\\react+flask\\ChatApp\\src\\Containers\\ChoosenPerson.tsx",[],"P:\\react+flask\\ChatApp\\src\\Containers\\ChatList.tsx",[],"P:\\react+flask\\ChatApp\\src\\Containers\\ChoosenChat.tsx",[],"P:\\react+flask\\ChatApp\\src\\Containers\\FriendsList.tsx",[],"P:\\react+flask\\ChatApp\\src\\Containers\\Friend.tsx",[],"P:\\react+flask\\ChatApp\\src\\Components\\FriendMng.tsx",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":16,"column":10,"nodeType":"78","messageId":"79","endLine":16,"endColumn":18},{"ruleId":"76","severity":1,"message":"80","line":16,"column":20,"nodeType":"78","messageId":"79","endLine":16,"endColumn":31},{"ruleId":"76","severity":1,"message":"81","line":43,"column":19,"nodeType":"78","messageId":"79","endLine":43,"endColumn":29},{"ruleId":"82","severity":1,"message":"83","line":77,"column":6,"nodeType":"84","endLine":77,"endColumn":20,"suggestions":"85"},{"ruleId":"76","severity":1,"message":"86","line":78,"column":9,"nodeType":"78","messageId":"79","endLine":78,"endColumn":22},{"ruleId":"82","severity":1,"message":"87","line":92,"column":6,"nodeType":"84","endLine":92,"endColumn":18,"suggestions":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"@typescript-eslint/no-unused-vars","'messages' is assigned a value but never used.","Identifier","unusedVar","'setMessages' is assigned a value but never used.","'setOptions' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loggedUserId'. Either include it or remove the dependency array.","ArrayExpression",["91"],"'show_dropdown' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'get_users'. Either include it or remove the dependency array.",["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [loggedUserId, user_friends]",{"range":"97","text":"98"},"Update the dependencies array to be: [get_users, searchText]",{"range":"99","text":"100"},[2169,2183],"[loggedUserId, user_friends]",[2608,2620],"[get_users, searchText]"]