[{"P:\\react+flask\\ChatApp\\src\\index.tsx":"1","P:\\react+flask\\ChatApp\\src\\Styles.tsx":"2","P:\\react+flask\\ChatApp\\src\\Components\\Chat.tsx":"3","P:\\react+flask\\ChatApp\\src\\Containers\\StartGreet.tsx":"4","P:\\react+flask\\ChatApp\\src\\Components\\App.tsx":"5","P:\\react+flask\\ChatApp\\src\\Containers\\InputField.tsx":"6","P:\\react+flask\\ChatApp\\src\\Containers\\ChoosenPerson.tsx":"7","P:\\react+flask\\ChatApp\\src\\Containers\\ChatList.tsx":"8","P:\\react+flask\\ChatApp\\src\\Containers\\ChoosenChat.tsx":"9","P:\\react+flask\\ChatApp\\src\\Containers\\FriendsList.tsx":"10","P:\\react+flask\\ChatApp\\src\\Containers\\Friend.tsx":"11","P:\\react+flask\\ChatApp\\src\\Components\\FriendMng.tsx":"12","P:\\react+flask\\ChatApp\\src\\Containers\\RepMsg.tsx":"13","P:\\react+flask\\ChatApp\\src\\Containers\\InitialOperation.tsx":"14","P:\\react+flask\\ChatApp\\src\\Containers\\MessasgeHandle.tsx":"15","P:\\react+flask\\ChatApp\\src\\Components\\UserPanel.tsx":"16"},{"size":422,"mtime":1611523604911,"results":"17","hashOfConfig":"18"},{"size":5381,"mtime":1611561065237,"results":"19","hashOfConfig":"18"},{"size":4702,"mtime":1611783924302,"results":"20","hashOfConfig":"18"},{"size":280,"mtime":1610842564006,"results":"21","hashOfConfig":"18"},{"size":7164,"mtime":1611783795705,"results":"22","hashOfConfig":"18"},{"size":669,"mtime":1611523243499,"results":"23","hashOfConfig":"18"},{"size":443,"mtime":1611522566596,"results":"24","hashOfConfig":"18"},{"size":677,"mtime":1611559923263,"results":"25","hashOfConfig":"18"},{"size":403,"mtime":1610841572206,"results":"26","hashOfConfig":"18"},{"size":768,"mtime":1611559923263,"results":"27","hashOfConfig":"18"},{"size":838,"mtime":1611559923263,"results":"28","hashOfConfig":"18"},{"size":3059,"mtime":1611784004149,"results":"29","hashOfConfig":"18"},{"size":604,"mtime":1611782521818,"results":"30","hashOfConfig":"18"},{"size":1252,"mtime":1611526795086,"results":"31","hashOfConfig":"18"},{"size":708,"mtime":1611560802440,"results":"32","hashOfConfig":"18"},{"size":4520,"mtime":1611559920804,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1tervze",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},"P:\\react+flask\\ChatApp\\src\\index.tsx",[],["68","69"],"P:\\react+flask\\ChatApp\\src\\Styles.tsx",[],"P:\\react+flask\\ChatApp\\src\\Components\\Chat.tsx",["70","71"],"P:\\react+flask\\ChatApp\\src\\Containers\\StartGreet.tsx",[],"P:\\react+flask\\ChatApp\\src\\Components\\App.tsx",[],"P:\\react+flask\\ChatApp\\src\\Containers\\InputField.tsx",[],"P:\\react+flask\\ChatApp\\src\\Containers\\ChoosenPerson.tsx",[],"P:\\react+flask\\ChatApp\\src\\Containers\\ChatList.tsx",[],"P:\\react+flask\\ChatApp\\src\\Containers\\ChoosenChat.tsx",[],"P:\\react+flask\\ChatApp\\src\\Containers\\FriendsList.tsx",[],"P:\\react+flask\\ChatApp\\src\\Containers\\Friend.tsx",[],"P:\\react+flask\\ChatApp\\src\\Components\\FriendMng.tsx",["72"],"P:\\react+flask\\ChatApp\\src\\Containers\\RepMsg.tsx",[],"P:\\react+flask\\ChatApp\\src\\Containers\\InitialOperation.tsx",[],"P:\\react+flask\\ChatApp\\src\\Containers\\MessasgeHandle.tsx",[],"P:\\react+flask\\ChatApp\\src\\Components\\UserPanel.tsx",["73"],"import {\r\n  ContactsList,\r\n  ModeSelect,\r\n  SearchBar,\r\n  Constacts,\r\n  SearchBox,\r\n  CrossDel,\r\n  ModeOption,\r\n  SearchUsers,\r\n} from \"../Styles\";\r\nimport { useState, useEffect } from \"react\";\r\nimport FriendsList from \"../Containers/FriendsList\";\r\nimport ChatList from \"../Containers/ChatList\";\r\nimport { ImCross } from \"react-icons/im\";\r\nexport interface SelElementI {\r\n  id: number;\r\n  type: \"friend\" | \"chat\" | \"start\";\r\n}\r\nexport interface UserO {\r\n  user_friends: number[];\r\n  loggedUserId: number;\r\n  selectedMode: string;\r\n  selectElement: ({ id, type }: SelElementI) => void;\r\n  selectMode: (mode: string) => void;\r\n}\r\nexport interface ElementI {\r\n  id: number;\r\n  name: string;\r\n  img_link: string;\r\n  status: boolean;\r\n}\r\ntype OptionT = {\r\n  label: string;\r\n  value: string | number;\r\n}\r\nconst Logged = ({\r\n  user_friends,\r\n  loggedUserId,\r\n  selectedMode,\r\n  selectMode,\r\n  selectElement,\r\n}: UserO) => {\r\n  const [user_friends_data_list, setUser_friends_data_list] = useState([]);\r\n  const [user_chat_data_list, setuser_chat_data_list] = useState([]);\r\n  // eslint-disable-next-line\r\n  const [options, setOptions] = useState([\r\n    { label: \"Start\", value: \"startingPage\" },\r\n    { label: \"Friends\", value: \"friends\" },\r\n    { label: \"Chats\", value: \"chats\" },\r\n  ]);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [similarUsers, setSimilarUsers] = useState([]);\r\n  useEffect(() => {\r\n    const fetchUserFriendsData = async () => {\r\n      const response = await fetch(`/friends_info`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          content_type: \"application/json\",\r\n        },\r\n        body: JSON.stringify({ ids: user_friends }),\r\n      });\r\n      const data = await response.json();\r\n\r\n      await setUser_friends_data_list(data.list);\r\n    };\r\n    const fetchUserChatsData = async () => {\r\n      const response = await fetch(`/chats`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          content_type: \"application/json\",\r\n        },\r\n        body: JSON.stringify({ id: loggedUserId }),\r\n      });\r\n      const data = await response.json();\r\n\r\n      await setuser_chat_data_list(data.list);\r\n    };\r\n    if (user_friends.length > 0) fetchUserFriendsData();\r\n    fetchUserChatsData();\r\n  }, [user_friends, loggedUserId]);\r\n  const get_users = async () => {\r\n    const response = await fetch(\"/search_user\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        content_type: \"application/json\",\r\n      },\r\n      body: JSON.stringify({ text: searchText }),\r\n    });\r\n    const data = await response.json();\r\n    await setSimilarUsers(data.list);\r\n  };\r\n  useEffect(() => {\r\n    if (searchText) {\r\n      get_users();\r\n    }\r\n  }, [searchText]);\r\n  return (\r\n    <ContactsList>\r\n      <ModeSelect\r\n        defaultValue={selectedMode}\r\n        onChange={(event: React.ChangeEvent<HTMLSelectElement>) => {\r\n          selectMode(event.currentTarget.value);\r\n          if (event.currentTarget.value === \"startingPage\")\r\n            selectElement({ id: 0, type: \"start\" });\r\n        }}\r\n      >\r\n        {options.map((option: OptionT) => (\r\n          <ModeOption key={option.value} value={option.value}>\r\n            {option.label}\r\n          </ModeOption>\r\n        ))}\r\n      </ModeSelect>\r\n      <SearchBox>\r\n        <SearchBar\r\n          type=\"text\"\r\n          value={searchText}\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => setSearchText(event.currentTarget.value)}\r\n          placeholder=\"Search..\"\r\n          onKeyUp={get_users}\r\n        />\r\n        <CrossDel onClick={() => setSearchText(\"\")}>\r\n          <ImCross />\r\n        </CrossDel>\r\n      </SearchBox>\r\n      {searchText ? (\r\n        <SearchUsers onClick={() => setSearchText(\"\")}>\r\n          <FriendsList\r\n            friends_data={similarUsers}\r\n            loggedUserId={loggedUserId}\r\n            selectUser={selectElement}\r\n          />\r\n        </SearchUsers>\r\n      ) : null}\r\n      <Constacts big={user_friends.length > 10 ? 1 : 0}>\r\n        {selectedMode === \"friends\" ? (\r\n          <FriendsList\r\n            friends_data={user_friends_data_list}\r\n            loggedUserId={loggedUserId}\r\n            selectUser={selectElement}\r\n          />\r\n        ) : selectedMode === \"chats\" ? (\r\n          <ChatList\r\n            chats_data={user_chat_data_list}\r\n            loggedUserId={loggedUserId}\r\n            selectChat={selectElement}\r\n          />\r\n        ) : (\r\n          \"Greeting on chat app!\"\r\n        )}\r\n      </Constacts>\r\n    </ContactsList>\r\n  );\r\n};\r\n\r\nexport default Logged;\r\n",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":91,"column":6,"nodeType":"80","endLine":91,"endColumn":16,"suggestions":"81"},{"ruleId":"78","severity":1,"message":"82","line":104,"column":6,"nodeType":"80","endLine":104,"endColumn":45,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":10,"nodeType":"86","messageId":"87","endLine":1,"endColumn":18},{"ruleId":"78","severity":1,"message":"88","line":96,"column":6,"nodeType":"80","endLine":96,"endColumn":18,"suggestions":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'oldMessages'. Either include it or remove the dependency array.","ArrayExpression",["92"],"React Hook useEffect has a missing dependency: 'fetchElementData'. Either include it or remove the dependency array.",["93"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'get_users'. Either include it or remove the dependency array.",["94"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [messages, oldMessages]",{"range":"101","text":"102"},"Update the dependencies array to be: [selectedElement, fetchMsg, loggedUSer, fetchElementData]",{"range":"103","text":"104"},"Update the dependencies array to be: [get_users, searchText]",{"range":"105","text":"106"},[2632,2642],"[messages, oldMessages]",[3001,3040],"[selectedElement, fetchMsg, loggedUSer, fetchElementData]",[2673,2685],"[get_users, searchText]"]